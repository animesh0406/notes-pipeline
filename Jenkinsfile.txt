pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Client Build') {
            agent {
                docker {
                    image 'node:10.19.0'
                    args '-u root:root' 
                    }   
                }
            steps {
                dir('notes-ui') {
                    sh 'npm install'
                    // sh 'npm install react react-dom react-router-dom react-scripts web-vitals'
                }
            }
        }
        stage('Server Build and Test') {
            agent {
                docker {
                    image 'node:10.19.0'
                    args '-u root:root' 
                    }   
                }
            steps {
                dir('server') {
                    sh 'npm install'
                    sh 'npm install body-parser cross-env express mocha mysql2 nodemon sequelize should sqlite3 supertest'
                    // sh 'npm test'
                }
            }
        }
        stage('Build Images') {
            steps {
                sh 'docker build -t animesh0406/fullstack-ui:client-latest notes-ui'
                sh 'docker build -t animesh0406/fullstack-back:server-latest server'
            }
        }
        stage('Push Images to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: '3bda2239-38ef-4f58-985c-fce764f0f67a', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                    sh 'docker push animesh0406/fullstack-ui:client-latest'
                    sh 'docker push animesh0406/fullstack-back:server-latest'
                }
            }
        }

        stage('Deploy') {
            steps {
                 sshagent (credentials: ['65014a8d-40ba-42db-9700-e803d02948a0']){
                    sh "scp -o StrictHostKeyChecking=no -r docker-compose.yml root@192.168.70.80:/root/"
                    sh "ssh -vvv -o StrictHostKeyChecking=no -T root@192.168.70.80 docker compose up -d"
                 }
            }
        }
    }
}

// const dbUrl = process.env.DB_URL